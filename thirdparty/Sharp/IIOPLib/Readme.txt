IIOP.NET (http://iiop-net.sourceforge.net/)
-------------------------------------------

IIOP.NET allows a seamless interoperation between .NET, 
CORBA and J2EE distributed objects. This is done by 
incorporating CORBA/IIOP support into .NET, leveraging 
the remoting framework.


IIOP.NET is released under the LGPL license. 

IIOP.NET is provided and supported by ELCA Informatique SA
(http://www.elca.ch/)


OVERVIEW
--------

This project contains:

IIOPChannel:
	a channel for the .NET framework, which performs
	serialization and deserialization of CLS objects
	for the CORBA protocol
CLSToIDLGenerator:
	a tool for generating the OMG IDL definition for a
	CLS type; takes the assembly as parameter
IDLToCLSCompiler:
	a tool for generating CLS metadata for OMG IDL
	definitions.
Examples:
	various examples showing the use of IIOP.NET
IntegrationTests:
	test files for IIOP.NET

REQUIREMENTS
------------

IIOP.NET requires Microsoft's .NET Framework 1.0 or 1.1 and a
a C# compiler.


INSTALLATION
------------

To compile the tutorials, you must copy the files "ir.idl" and "orb.idl"
in the ./IDL directory before compiling the tutorials. You will find 
these two files as part of your Java SDK in the %JAVA_HOME%\lib directory.

To compile some part of the project, the makefile requires some 
environment variables to be set:
	WAS_HOME	WebSphere 5 application server path
			used by Examples\EBJChatRoom\WebSphere_5\
			and the IntegrationTests
			(set if installed)

	JBOSS_HOME	JBoss 3.2.1 application server path
			used by Examples\EBJChatRoom\JBoss3.2.1\
			and the IntegrationTests
			(set if installed)
	
	MICO_HOME	Mico 2.3.10, >= patch 103 directory
			used by IntegrationTests
			(set if installed)

	NUNITV2_HOME	NUnit V2 path
			used by IIOPChannel unit tests and for 
			the IntegrationTests
			(required for tests)

	JUNIT_HOME	JUnit path
			used by the IntegrationTests
			(required for tests)



BUILDING IIOP.NET
-----------------

To build IIOP.NET use
	nmake
or
	nmake build

This command will recursively build the IIOPChannel,
the CLSToIDLGenerator, the IDLToCLSCompiler, and all the
examples. 

To build only the channel and compiler, use
	nmake build-base


To remove the binaries generated by the build, use
	nmake clean


DISCLAIMER
----------

Copyright 2003 by ELCA Informatique SA
Av. de la Harpe 22-24, 1000 Lausanne 13, Switzerland
http://www.elca.ch/
All rights reserved.

Notice
WHILE THE INFORMATION IN THIS PUBLICATION IS BELIEVED 
TO BE ACCURATE, ELCA MAKES NO WARRANTY OF ANY KIND, 
EXPRESS OR IMPLIED, WITH REGARD TO THIS MATERIAL, INCLUDING, 
BUT NOT LIMITED TO ANY WARRANTY OF TITLE OR OWNERSHIP, 
IMPLIED  WARRANTY OF MERCHANTABILITY OR WARRANTY OF FITNESS 
FOR PARTICULAR PURPOSE OR USE. In no event shall ELCA be 
liable for errors contained herein or for indirect, incidental, 
special consequential, reliance or cover damages, including 
loss of profits, revenue, data or use, incurred by any user 
or any third party.

OMG and Object Management are registered trademarks of the Object 
Management Group, Inc. Object Request Broker, OMG IDL, ORB, CORBA 
are trademarks of the Object Management Group, Inc. Microsoft, .NET 
are trademarks of Microsoft Corp.

