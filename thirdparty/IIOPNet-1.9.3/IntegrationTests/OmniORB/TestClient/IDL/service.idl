module CCE {

    interface Assembly {
    };

};


union TestUnion switch (long) {
    case 0: short val0;
    case 1: 
    case 2: long val1;
    default: boolean val2;
};

enum TestEnumForU {
    A, B, C
};

union TestUnionE switch(TestEnumForU) {
    case A: short valE0;
    case B:
    case C: TestEnumForU valE1;
};

enum TestEnumForU3 {
    A3, B3, C3, D3
};


union TestUnionE3 switch(TestEnumForU3) {    
    case A3: TestEnumForU3 valE0;
    case B3: 
    // test recursive typecode + indirections
    case C3: sequence<TestUnionE3> valE1;
    // test indirections
    case D3: sequence<TestEnumForU3> valE2;
};


struct RecStruct {
    sequence<RecStruct> seq;
};

enum SimpleEnum {
    S1, S2, S3
};

struct SimpleStruct {
    long code;
    string msg;
    SimpleEnum sType;
};

typedef sequence<wstring> wstringSeq;

typedef sequence<wstringSeq> seqOfWStringSeq;

typedef sequence<long, 3> boundedLongSeq;

// test for sequence of sequence (problem report)
typedef sequence< octet, 16 > Uuid;
typedef sequence< Uuid > Uuids;

typedef sequence < octet > octet_seq;
typedef sequence < octet_seq > seq_of_octect_seq;

typedef long longTD;
typedef string stringList[5];  
typedef long intList[5];  
typedef long int2Dim[2][2];  

struct StructWithTypedefMember {
    longTD longtdField;
};

struct BlobData { 
  short ident; 
  longTD data[3]; 
}; 


interface TestService {

    struct InnerStruct {
        long Field1;
    };

    struct Event { 
        long EventId;
    }; 

    TestUnion EchoTestUnion(in TestUnion arg);
    TestUnionE EchoTestUnionE(in TestUnionE arg);   
    any EchoAny(in any arg);
    any RetrieveUnknownUnion();
    any RetrieveWStringAsAny(in wstring arg);
    any RetrieveStringAsAny(in string arg);

    any RetrieveStructWithTypedefMember(in long elemVal);
    any RetrieveTypedefedSeq(in long nrOfElems, in long memberVal);
    
    unsigned long ExtractFromULongAny(in any arg);
    long ExtractFromLongTypeDef(in any arg);
    any RetrieveULongAsAny(in unsigned long arg);
    any RetrieveLongTypeDefAsAny(in long arg);

    wstring ExtractFromWStringAny(in any arg);
    string ExtractFromStringAny(in any arg);
    seq_of_octect_seq ExtractFromOctetOfOctetSeqAny(in any arg);    

    wchar EchoWChar(in wchar arg);
    wstring EchoWString(in wstring arg);
    string EchoString(in string arg);

    // test for forum bug report: idl wstring sequences
    wstringSeq RetrieveWstringSeq(in wstring val, in long nrOfElems);
    wstringSeq EchoWstringSeq(in wstringSeq arg);
    seqOfWStringSeq EchoSeqOfWStringSeq(in seqOfWStringSeq arg);

    boundedLongSeq EchoBoundedSeq(in boundedLongSeq arg);
    Uuids EchoUuids(in Uuids arg);
    any RetrieveUuidAsAny(in long nrOfelementsOuter, in long nrOfElementsInner, in octet elemVal);

    InnerStruct EchoInnerStruct(in InnerStruct arg);

    RecStruct EchoRecStruct(in RecStruct arg);

    SimpleStruct EchoSimpleStruct(in SimpleStruct arg);
    
    // test escaped-identitfier rule (_ not transmitted)
    octet _octet(in octet arg);
    
    // test escaped-identitfier rule (_ not transmitted)
    attribute boundedLongSeq _sequence;

    any RetrieveInnerStructAsAny(in InnerStruct arg);
    any RetrieveEventAsAny(in Event arg);

    // test for idl arrays
    

    BlobData EchoBlobData(in BlobData data);    
    intList EchoIntList5(in intList arg);  
    int2Dim EchoInt2Dim2x2(in int2Dim arg);  
    stringList EchoStringList5(in stringList arg);    

    CCE::Assembly CreateAsm();

}; 

// the following is used e.g. for is_a tests
interface TestSimpleServicePublic {

    long EchoLong(in long arg);

};

