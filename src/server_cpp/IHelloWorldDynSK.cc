// This file is generated by omniidl (C++ backend) - omniORB_4_2. Do not edit.

#include "IHelloWorld.hh"

OMNI_USING_NAMESPACE(omni)

static const char* _0RL_dyn_library_version = omniORB_4_2_dyn;

static ::CORBA::TypeCode::_Tracker _0RL_tcTrack(__FILE__);

static CORBA::PR_structMember _0RL_structmember_First_mMyComplexNumber[] = {
  {"re", CORBA::TypeCode::PR_long_tc()},
  {"im", CORBA::TypeCode::PR_long_tc()}
};

#ifdef _0RL_tc_First_mMyComplexNumber
#  undef _0RL_tc_First_mMyComplexNumber
#endif
static CORBA::TypeCode_ptr _0RL_tc_First_mMyComplexNumber = CORBA::TypeCode::PR_struct_tc("IDL:Org.Uneta.Iiopnet.Examples/First/MyComplexNumber:1.0", "MyComplexNumber", _0RL_structmember_First_mMyComplexNumber, 2, &_0RL_tcTrack);

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace First { 
  const ::CORBA::TypeCode_ptr _tc_MyComplexNumber = _0RL_tc_First_mMyComplexNumber;
} 
#else
const ::CORBA::TypeCode_ptr First::_tc_MyComplexNumber = _0RL_tc_First_mMyComplexNumber;
#endif


static CORBA::PR_structMember _0RL_structmember_First_mMyOtherDataType[] = {
  {"re", CORBA::TypeCode::PR_long_tc()},
  {"im", CORBA::TypeCode::PR_long_tc()}
};

#ifdef _0RL_tc_First_mMyOtherDataType
#  undef _0RL_tc_First_mMyOtherDataType
#endif
static CORBA::TypeCode_ptr _0RL_tc_First_mMyOtherDataType = CORBA::TypeCode::PR_struct_tc("IDL:Org.Uneta.Iiopnet.Examples/First/MyOtherDataType:1.0", "MyOtherDataType", _0RL_structmember_First_mMyOtherDataType, 2, &_0RL_tcTrack);

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace First { 
  const ::CORBA::TypeCode_ptr _tc_MyOtherDataType = _0RL_tc_First_mMyOtherDataType;
} 
#else
const ::CORBA::TypeCode_ptr First::_tc_MyOtherDataType = _0RL_tc_First_mMyOtherDataType;
#endif


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace First { 
  const ::CORBA::TypeCode_ptr _tc_IHello = CORBA::TypeCode::PR_interface_tc("IDL:Org.Uneta.Iiopnet.Examples/First/IHello:1.0", "IHello", &_0RL_tcTrack);
} 
#else
const ::CORBA::TypeCode_ptr First::_tc_IHello = CORBA::TypeCode::PR_interface_tc("IDL:Org.Uneta.Iiopnet.Examples/First/IHello:1.0", "IHello", &_0RL_tcTrack);
#endif

static void _0RL_First_mMyComplexNumber_marshal_fn(cdrStream& _s, void* _v)
{
  First::MyComplexNumber* _p = (First::MyComplexNumber*)_v;
  *_p >>= _s;
}
static void _0RL_First_mMyComplexNumber_unmarshal_fn(cdrStream& _s, void*& _v)
{
  First::MyComplexNumber* _p = new First::MyComplexNumber;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_First_mMyComplexNumber_destructor_fn(void* _v)
{
  First::MyComplexNumber* _p = (First::MyComplexNumber*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const First::MyComplexNumber& _s)
{
  First::MyComplexNumber* _p = new First::MyComplexNumber(_s);
  _a.PR_insert(_0RL_tc_First_mMyComplexNumber,
               _0RL_First_mMyComplexNumber_marshal_fn,
               _0RL_First_mMyComplexNumber_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, First::MyComplexNumber* _sp)
{
  _a.PR_insert(_0RL_tc_First_mMyComplexNumber,
               _0RL_First_mMyComplexNumber_marshal_fn,
               _0RL_First_mMyComplexNumber_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, First::MyComplexNumber*& _sp)
{
  return _a >>= (const First::MyComplexNumber*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const First::MyComplexNumber*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_First_mMyComplexNumber,
                    _0RL_First_mMyComplexNumber_unmarshal_fn,
                    _0RL_First_mMyComplexNumber_marshal_fn,
                    _0RL_First_mMyComplexNumber_destructor_fn,
                    _v)) {
    _sp = (const First::MyComplexNumber*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_First_mMyOtherDataType_marshal_fn(cdrStream& _s, void* _v)
{
  First::MyOtherDataType* _p = (First::MyOtherDataType*)_v;
  *_p >>= _s;
}
static void _0RL_First_mMyOtherDataType_unmarshal_fn(cdrStream& _s, void*& _v)
{
  First::MyOtherDataType* _p = new First::MyOtherDataType;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_First_mMyOtherDataType_destructor_fn(void* _v)
{
  First::MyOtherDataType* _p = (First::MyOtherDataType*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const First::MyOtherDataType& _s)
{
  First::MyOtherDataType* _p = new First::MyOtherDataType(_s);
  _a.PR_insert(_0RL_tc_First_mMyOtherDataType,
               _0RL_First_mMyOtherDataType_marshal_fn,
               _0RL_First_mMyOtherDataType_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, First::MyOtherDataType* _sp)
{
  _a.PR_insert(_0RL_tc_First_mMyOtherDataType,
               _0RL_First_mMyOtherDataType_marshal_fn,
               _0RL_First_mMyOtherDataType_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, First::MyOtherDataType*& _sp)
{
  return _a >>= (const First::MyOtherDataType*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const First::MyOtherDataType*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_First_mMyOtherDataType,
                    _0RL_First_mMyOtherDataType_unmarshal_fn,
                    _0RL_First_mMyOtherDataType_marshal_fn,
                    _0RL_First_mMyOtherDataType_destructor_fn,
                    _v)) {
    _sp = (const First::MyOtherDataType*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_First_mIHello_marshal_fn(cdrStream& _s, void* _v)
{
  omniObjRef* _o = (omniObjRef*)_v;
  omniObjRef::_marshal(_o, _s);
}
static void _0RL_First_mIHello_unmarshal_fn(cdrStream& _s, void*& _v)
{
  omniObjRef* _o = omniObjRef::_unMarshal(First::IHello::_PD_repoId, _s);
  _v = _o;
}
static void _0RL_First_mIHello_destructor_fn(void* _v)
{
  omniObjRef* _o = (omniObjRef*)_v;
  if (_o)
    omni::releaseObjRef(_o);
}

void operator<<=(::CORBA::Any& _a, First::IHello_ptr _o)
{
  First::IHello_ptr _no = First::IHello::_duplicate(_o);
  _a.PR_insert(First::_tc_IHello,
               _0RL_First_mIHello_marshal_fn,
               _0RL_First_mIHello_destructor_fn,
               _no->_PR_getobj());
}
void operator<<=(::CORBA::Any& _a, First::IHello_ptr* _op)
{
  _a.PR_insert(First::_tc_IHello,
               _0RL_First_mIHello_marshal_fn,
               _0RL_First_mIHello_destructor_fn,
               (*_op)->_PR_getobj());
  *_op = First::IHello::_nil();
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, First::IHello_ptr& _o)
{
  void* _v;
  if (_a.PR_extract(First::_tc_IHello,
                    _0RL_First_mIHello_unmarshal_fn,
                    _0RL_First_mIHello_marshal_fn,
                    _0RL_First_mIHello_destructor_fn,
                    _v)) {
    omniObjRef* _r = (omniObjRef*)_v;
    if (_r)
      _o = (First::IHello_ptr)_r->_ptrToObjRef(First::IHello::_PD_repoId);
    else
      _o = First::IHello::_nil();
    return 1;
  }
  return 0;
}

